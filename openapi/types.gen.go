// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package openapi

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
	RaterIdScopes    = "RaterId.Scopes"
)

// Defines values for RatingResultRating.
const (
	RatingResultRatingN05 RatingResultRating = 0.5
	RatingResultRatingN1  RatingResultRating = 1
	RatingResultRatingN15 RatingResultRating = 1.5
	RatingResultRatingN2  RatingResultRating = 2
	RatingResultRatingN25 RatingResultRating = 2.5
	RatingResultRatingN3  RatingResultRating = 3
	RatingResultRatingN35 RatingResultRating = 3.5
	RatingResultRatingN4  RatingResultRating = 4
	RatingResultRatingN45 RatingResultRating = 4.5
	RatingResultRatingN5  RatingResultRating = 5
)

// Defines values for RatingSubmitRating.
const (
	RatingSubmitRatingN05 RatingSubmitRating = 0.5
	RatingSubmitRatingN1  RatingSubmitRating = 1
	RatingSubmitRatingN15 RatingSubmitRating = 1.5
	RatingSubmitRatingN2  RatingSubmitRating = 2
	RatingSubmitRatingN25 RatingSubmitRating = 2.5
	RatingSubmitRatingN3  RatingSubmitRating = 3
	RatingSubmitRatingN35 RatingSubmitRating = 3.5
	RatingSubmitRatingN4  RatingSubmitRating = 4
	RatingSubmitRatingN45 RatingSubmitRating = 4.5
	RatingSubmitRatingN5  RatingSubmitRating = 5
)

// BoxOffice defines model for BoxOffice.
type BoxOffice struct {
	// Currency Currency code (e.g., USD)
	Currency string `json:"currency"`

	// LastUpdated Last update time from upstream (UTC)
	LastUpdated time.Time `json:"lastUpdated"`
	Revenue     struct {
		// OpeningWeekendUSA The opening weekend gross revenue in the USA in USD.
		OpeningWeekendUSA *int64 `json:"openingWeekendUSA,omitempty"`

		// Worldwide The total worldwide gross revenue in USD.
		Worldwide int64 `json:"worldwide"`
	} `json:"revenue"`

	// Source Data source identifier
	Source string `json:"source"`
}

// Error defines model for Error.
type Error struct {
	// Code Error code (readable)
	Code string `json:"code"`

	// Details Additional information
	Details interface{} `json:"details,omitempty"`

	// Message Error description
	Message string `json:"message"`
}

// Movie defines model for Movie.
type Movie struct {
	BoxOffice *BoxOffice `json:"boxOffice"`

	// Budget The estimated production budget of the movie in USD.
	Budget *int64 `json:"budget,omitempty"`

	// Distributor The company that distributed the movie.
	Distributor *string `json:"distributor,omitempty"`
	Genre       string  `json:"genre"`

	// Id Movie ID
	Id string `json:"id"`

	// MpaRating The MPA (Motion Picture Association) rating.
	MpaRating *string `json:"mpaRating,omitempty"`

	// ReleaseDate The original theatrical release date in North America.
	ReleaseDate openapi_types.Date `json:"releaseDate"`
	Title       string             `json:"title"`
}

// MovieCreate defines model for MovieCreate.
type MovieCreate struct {
	// Budget The estimated production budget of the movie in USD. User-provided value takes precedence over box office API data.
	Budget *int64 `json:"budget,omitempty"`

	// Distributor The company that distributed the movie. User-provided value takes precedence over box office API data.
	Distributor *string `json:"distributor,omitempty"`

	// Genre Genre
	Genre string `json:"genre"`

	// MpaRating The MPA (Motion Picture Association) rating. User-provided value takes precedence over box office API data.
	MpaRating *string `json:"mpaRating,omitempty"`

	// ReleaseDate The original theatrical release date in North America.
	ReleaseDate openapi_types.Date `json:"releaseDate"`

	// Title Movie title
	Title string `json:"title"`
}

// MoviePage defines model for MoviePage.
type MoviePage struct {
	Items []Movie `json:"items"`

	// NextCursor Next page cursor; `null` or omitted when no more data
	NextCursor *string `json:"nextCursor"`
}

// RatingAggregate defines model for RatingAggregate.
type RatingAggregate struct {
	// Average Average rating; rounded to 1 decimal place
	Average float32 `json:"average"`

	// Count Total number of ratings
	Count int `json:"count"`
}

// RatingResult defines model for RatingResult.
type RatingResult struct {
	MovieTitle string `json:"movieTitle"`

	// RaterId Taken from request header `X-Rater-Id`
	RaterId string `json:"raterId"`

	// Rating Rating value from `{0.5, 1.0, …, 5.0}`
	Rating RatingResultRating `json:"rating"`
}

// RatingResultRating Rating value from `{0.5, 1.0, …, 5.0}`
type RatingResultRating float32

// RatingSubmit defines model for RatingSubmit.
type RatingSubmit struct {
	// Rating Rating value from `{0.5, 1.0, …, 5.0}`
	Rating RatingSubmitRating `json:"rating"`
}

// RatingSubmitRating Rating value from `{0.5, 1.0, …, 5.0}`
type RatingSubmitRating float32

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Forbidden defines model for Forbidden.
type Forbidden = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// GetMoviesParams defines parameters for GetMovies.
type GetMoviesParams struct {
	// Q Keyword search (e.g., fuzzy matching of titles).
	Q *string `form:"q,omitempty" json:"q,omitempty"`

	// Year Exact match for release year (extracted from releaseDate).
	Year *int `form:"year,omitempty" json:"year,omitempty"`

	// Genre Exact match for genre (case-insensitive implementation determined by server).
	Genre *string `form:"genre,omitempty" json:"genre,omitempty"`

	// Distributor Exact match for distributor (case-insensitive implementation determined by server).
	Distributor *string `form:"distributor,omitempty" json:"distributor,omitempty"`

	// Budget Filter movies with production budget less than or equal to the specified amount in USD.
	Budget *int64 `form:"budget,omitempty" json:"budget,omitempty"`

	// MpaRating Exact match for MPA rating (e.g., G, PG, PG-13, R, NC-17).
	MpaRating *string `form:"mpaRating,omitempty" json:"mpaRating,omitempty"`

	// Limit Number of items per page.
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor The `nextCursor` returned from previous page, used to get next page.
	Cursor *string `form:"cursor,omitempty" json:"cursor,omitempty"`
}

// PostMoviesJSONRequestBody defines body for PostMovies for application/json ContentType.
type PostMoviesJSONRequestBody = MovieCreate

// PostMoviesTitleRatingsJSONRequestBody defines body for PostMoviesTitleRatings for application/json ContentType.
type PostMoviesTitleRatingsJSONRequestBody = RatingSubmit
